%!PS-Adobe-2.0
%%Title: Phi_q_LJ2D_1.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jul 28 15:41:43 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 (-50)]
] -66.7 MRshow
1.000 UL
LTb
1020 1149 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1149 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1020 1697 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1697 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
1020 2246 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2246 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1020 2794 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2794 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
1020 3343 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3343 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
1020 3891 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3891 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MRshow
1.000 UL
LTb
1020 4440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 300)]
] -66.7 MRshow
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (2)]
[(Symbol) 200.0 0.0 true true 0 (p)]
] -66.7 MCshow
1.000 UL
LTb
5400 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5400 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (3)]
[(Symbol) 200.0 0.0 true true 0 (p)]
[(Helvetica) 200.0 0.0 true true 0 (/2)]
] -66.7 MCshow
1.000 UL
LTb
3940 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3940 400 M
[ [(Symbol) 200.0 0.0 true true 0 (p)]
] -66.7 MCshow
1.000 UL
LTb
2480 600 M
0 63 V
0 3777 R
0 -63 V
stroke
2480 400 M
[ [(Symbol) 200.0 0.0 true true 0 (p)]
[(Helvetica) 200.0 0.0 true true 0 (/2)]
] -66.7 MCshow
1.000 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
LTb
200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 200.0 0.0 true true 0 ( \()]
[(Symbol) 200.0 0.0 true true 0 (e/s)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -86.7 MCshow
grestore
LTb
3940 100 M
[ [(Helvetica) 200.0 0.0 true true 0 (q)]
] -66.7 MCshow
LTb
3940 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Elastic Stiffness Coefficients for 2D LJ system, primitive cell)]
] -66.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5957 4277 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (xx)]
] -46.7 MRshow
LT0
6077 4277 M
543 0 V
1020 1149 M
91 47 V
92 55 V
91 64 V
91 70 V
91 78 V
92 89 V
91 96 V
91 104 V
91 116 V
92 119 V
91 129 V
91 124 V
91 142 V
92 133 V
91 147 V
91 145 V
91 141 V
92 138 V
91 133 V
91 136 V
91 131 V
92 122 V
91 105 V
91 112 V
91 95 V
92 93 V
91 73 V
91 61 V
91 44 V
92 28 V
91 27 V
91 11 V
91 -11 V
92 -27 V
91 -28 V
91 -44 V
91 -61 V
92 -73 V
91 -93 V
91 -95 V
91 -112 V
92 -105 V
91 -122 V
91 -131 V
91 -136 V
92 -133 V
91 -138 V
91 -141 V
91 -145 V
92 -147 V
91 -133 V
91 -142 V
91 -124 V
92 -129 V
91 -119 V
91 -116 V
91 -104 V
92 -96 V
91 -89 V
91 -78 V
91 -70 V
92 -64 V
91 -55 V
91 -47 V
1020 1149 Circle
1111 1196 Circle
1203 1251 Circle
1294 1315 Circle
1385 1385 Circle
1476 1463 Circle
1568 1552 Circle
1659 1648 Circle
1750 1752 Circle
1841 1868 Circle
1933 1987 Circle
2024 2116 Circle
2115 2240 Circle
2206 2382 Circle
2298 2515 Circle
2389 2662 Circle
2480 2807 Circle
2571 2948 Circle
2663 3086 Circle
2754 3219 Circle
2845 3355 Circle
2936 3486 Circle
3028 3608 Circle
3119 3713 Circle
3210 3825 Circle
3301 3920 Circle
3393 4013 Circle
3484 4086 Circle
3575 4147 Circle
3666 4191 Circle
3758 4219 Circle
3849 4246 Circle
3940 4257 Circle
4031 4246 Circle
4123 4219 Circle
4214 4191 Circle
4305 4147 Circle
4396 4086 Circle
4488 4013 Circle
4579 3920 Circle
4670 3825 Circle
4761 3713 Circle
4853 3608 Circle
4944 3486 Circle
5035 3355 Circle
5126 3219 Circle
5218 3086 Circle
5309 2948 Circle
5400 2807 Circle
5491 2662 Circle
5583 2515 Circle
5674 2382 Circle
5765 2240 Circle
5856 2116 Circle
5948 1987 Circle
6039 1868 Circle
6130 1752 Circle
6221 1648 Circle
6313 1552 Circle
6404 1463 Circle
6495 1385 Circle
6586 1315 Circle
6678 1251 Circle
6769 1196 Circle
6860 1149 Circle
6348 4277 Circle
1.000 UP
1.000 UL
LT1
LTb
5957 4077 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (xy)]
[(Helvetica) 200.0 0.0 true true 0 (/i)]
] -46.7 MRshow
LT1
6077 4077 M
543 0 V
1020 1149 M
91 -14 V
92 -15 V
91 -14 V
91 -13 V
91 -11 V
92 -12 V
91 -11 V
91 -8 V
91 -8 V
92 -7 V
91 -8 V
91 0 V
91 -5 V
92 -2 V
91 -2 V
91 -1 V
91 6 V
92 3 V
91 3 V
91 5 V
91 5 V
92 7 V
91 6 V
91 15 V
91 6 V
92 9 V
91 9 V
91 12 V
91 12 V
92 10 V
91 12 V
91 11 V
91 10 V
92 13 V
91 9 V
91 12 V
91 12 V
92 10 V
91 8 V
91 7 V
91 14 V
92 6 V
91 7 V
91 5 V
91 5 V
92 3 V
91 4 V
91 5 V
91 -1 V
92 -2 V
91 -2 V
91 -4 V
91 -1 V
92 -8 V
91 -6 V
91 -9 V
91 -8 V
92 -11 V
91 -11 V
91 -12 V
91 -12 V
92 -15 V
91 -15 V
91 -13 V
1020 1149 BoxF
1111 1135 BoxF
1203 1120 BoxF
1294 1106 BoxF
1385 1093 BoxF
1476 1082 BoxF
1568 1070 BoxF
1659 1059 BoxF
1750 1051 BoxF
1841 1043 BoxF
1933 1036 BoxF
2024 1028 BoxF
2115 1028 BoxF
2206 1023 BoxF
2298 1021 BoxF
2389 1019 BoxF
2480 1018 BoxF
2571 1024 BoxF
2663 1027 BoxF
2754 1030 BoxF
2845 1035 BoxF
2936 1040 BoxF
3028 1047 BoxF
3119 1053 BoxF
3210 1068 BoxF
3301 1074 BoxF
3393 1083 BoxF
3484 1092 BoxF
3575 1104 BoxF
3666 1116 BoxF
3758 1126 BoxF
3849 1138 BoxF
3940 1149 BoxF
4031 1159 BoxF
4123 1172 BoxF
4214 1181 BoxF
4305 1193 BoxF
4396 1205 BoxF
4488 1215 BoxF
4579 1223 BoxF
4670 1230 BoxF
4761 1244 BoxF
4853 1250 BoxF
4944 1257 BoxF
5035 1262 BoxF
5126 1267 BoxF
5218 1270 BoxF
5309 1274 BoxF
5400 1279 BoxF
5491 1278 BoxF
5583 1276 BoxF
5674 1274 BoxF
5765 1270 BoxF
5856 1269 BoxF
5948 1261 BoxF
6039 1255 BoxF
6130 1246 BoxF
6221 1238 BoxF
6313 1227 BoxF
6404 1216 BoxF
6495 1204 BoxF
6586 1192 BoxF
6678 1177 BoxF
6769 1162 BoxF
6860 1149 BoxF
6348 4077 BoxF
1.000 UP
1.000 UL
LT2
LTb
5957 3877 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (yy)]
] -46.7 MRshow
LT2
6077 3877 M
543 0 V
1020 1150 M
91 43 V
92 44 V
91 42 V
91 45 V
91 43 V
92 41 V
91 39 V
91 41 V
91 40 V
92 40 V
91 35 V
91 39 V
91 34 V
92 31 V
91 33 V
91 35 V
91 26 V
92 30 V
91 23 V
91 27 V
91 22 V
92 22 V
91 17 V
91 17 V
91 20 V
92 8 V
91 15 V
91 5 V
91 12 V
92 2 V
91 5 V
91 2 V
91 -2 V
92 -5 V
91 -2 V
91 -12 V
91 -5 V
92 -15 V
91 -8 V
91 -20 V
91 -17 V
92 -17 V
91 -22 V
91 -22 V
91 -27 V
92 -23 V
91 -30 V
91 -26 V
91 -35 V
92 -33 V
91 -31 V
91 -34 V
91 -39 V
92 -35 V
91 -40 V
91 -40 V
91 -41 V
92 -39 V
91 -41 V
91 -43 V
91 -45 V
92 -42 V
91 -44 V
91 -43 V
1020 1150 CircleF
1111 1193 CircleF
1203 1237 CircleF
1294 1279 CircleF
1385 1324 CircleF
1476 1367 CircleF
1568 1408 CircleF
1659 1447 CircleF
1750 1488 CircleF
1841 1528 CircleF
1933 1568 CircleF
2024 1603 CircleF
2115 1642 CircleF
2206 1676 CircleF
2298 1707 CircleF
2389 1740 CircleF
2480 1775 CircleF
2571 1801 CircleF
2663 1831 CircleF
2754 1854 CircleF
2845 1881 CircleF
2936 1903 CircleF
3028 1925 CircleF
3119 1942 CircleF
3210 1959 CircleF
3301 1979 CircleF
3393 1987 CircleF
3484 2002 CircleF
3575 2007 CircleF
3666 2019 CircleF
3758 2021 CircleF
3849 2026 CircleF
3940 2028 CircleF
4031 2026 CircleF
4123 2021 CircleF
4214 2019 CircleF
4305 2007 CircleF
4396 2002 CircleF
4488 1987 CircleF
4579 1979 CircleF
4670 1959 CircleF
4761 1942 CircleF
4853 1925 CircleF
4944 1903 CircleF
5035 1881 CircleF
5126 1854 CircleF
5218 1831 CircleF
5309 1801 CircleF
5400 1775 CircleF
5491 1740 CircleF
5583 1707 CircleF
5674 1676 CircleF
5765 1642 CircleF
5856 1603 CircleF
5948 1568 CircleF
6039 1528 CircleF
6130 1488 CircleF
6221 1447 CircleF
6313 1408 CircleF
6404 1367 CircleF
6495 1324 CircleF
6586 1279 CircleF
6678 1237 CircleF
6769 1193 CircleF
6860 1150 CircleF
6348 3877 CircleF
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
