%!PS-Adobe-2.0
%%Title: Phi_q_EAM3D.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Jul 27 10:34:19 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
/Helvetica reencodeISO def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
stroke
780 600 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
900 1368 M
63 0 V
5897 0 R
-63 0 V
stroke
780 1368 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
900 2136 M
63 0 V
5897 0 R
-63 0 V
stroke
780 2136 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
1.000 UL
LTb
900 2904 M
63 0 V
5897 0 R
-63 0 V
stroke
780 2904 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
1.000 UL
LTb
900 3672 M
63 0 V
5897 0 R
-63 0 V
stroke
780 3672 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 8)]
] -66.7 MRshow
1.000 UL
LTb
900 4440 M
63 0 V
5897 0 R
-63 0 V
stroke
780 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (Y)]
] -66.7 MCshow
1.000 UL
LTb
4873 600 M
0 63 V
0 3777 R
0 -63 V
stroke
4873 400 M
[ /Symbol reencodeISO def
[(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MCshow
1.000 UL
LTb
3880 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3880 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (M)]
] -66.7 MCshow
1.000 UL
LTb
1893 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1893 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (X)]
] -66.7 MCshow
1.000 UL
LTb
900 600 M
0 63 V
0 3777 R
0 -63 V
stroke
900 400 M
[ [(Symbol) 200.0 0.0 true true 0 (G)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
900 600 M
5960 0 V
0 3840 V
-5960 0 V
900 600 L
LTb
200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 200.0 0.0 true true 0 ( \(eV/\305)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -86.7 MCshow
grestore
LTb
3880 100 M
[ [(Helvetica) 200.0 0.0 true true 0 (q)]
] -66.7 MCshow
LTb
3880 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Cu\(111\) Orthogonal Lattice with EAM Potential)]
] -66.7 MCshow
1.000 UP
1.000 UL
LTb
1893 600 M
0 3840 V
1.000 UL
LTb
3880 600 M
0 3840 V
1.000 UL
LTb
4873 600 M
0 3840 V
1.000 UL
LTb
6860 600 M
0 3840 V
1.000 UL
LT0
900 2635 M
248 75 V
249 24 V
248 30 V
248 19 V
249 12 V
248 11 V
248 -71 V
249 -23 V
248 -15 V
248 -36 V
249 -46 V
248 40 V
248 11 V
249 20 V
248 8 V
248 -59 V
249 12 V
248 47 V
248 -39 V
249 57 V
248 -47 V
248 81 V
249 -15 V
248 -39 V
1.000 UL
LT0
900 1285 M
248 32 V
249 14 V
248 25 V
248 0 V
249 121 V
248 315 V
248 437 V
249 503 V
248 496 V
248 364 V
249 255 V
248 106 V
248 -331 V
249 -885 V
248 -944 V
248 -508 V
249 154 V
248 322 V
248 482 V
249 520 V
248 445 V
248 453 V
249 280 V
248 73 V
1.000 UL
LT0
900 1285 M
248 3 V
249 66 V
248 17 V
248 37 V
249 2 V
248 28 V
248 71 V
249 99 V
248 77 V
248 71 V
249 51 V
248 29 V
248 -68 V
249 -186 V
248 -176 V
248 -121 V
249 11 V
248 93 V
248 70 V
249 109 V
248 73 V
248 76 V
249 59 V
248 1 V
2.000 UP
1.000 UL
LT1
LTb
1326 4248 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (11)]
] -46.7 MRshow
LT1
900 2635 Box
1148 2710 Box
1397 2734 Box
1645 2764 Box
1893 2768 Box
2142 2795 Box
2390 2800 Box
2638 2738 Box
2887 2718 Box
3135 2695 Box
3383 2643 Box
3632 2632 Box
3880 2636 Box
4128 2667 Box
4377 2688 Box
4625 2695 Box
4873 2635 Box
5122 2647 Box
5370 2693 Box
5618 2654 Box
5867 2713 Box
6115 2665 Box
6363 2742 Box
6612 2754 Box
6860 2723 Box
1717 4248 Box
2.000 UP
1.000 UL
LT1
LTb
1326 4008 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (22)]
] -46.7 MRshow
LT1
900 1285 Circle
1148 1317 Circle
1397 1333 Circle
1645 1356 Circle
1893 1353 Circle
2142 1469 Circle
2390 1792 Circle
2638 2232 Circle
2887 2733 Circle
3135 3238 Circle
3383 3631 Circle
3632 3843 Circle
3880 4025 Circle
4128 3637 Circle
4377 2720 Circle
4625 1793 Circle
4873 1285 Circle
5122 1439 Circle
5370 1758 Circle
5618 2237 Circle
5867 2762 Circle
6115 3214 Circle
6363 3658 Circle
6612 3935 Circle
6860 3987 Circle
1717 4008 Circle
2.000 UP
1.000 UL
LT1
LTb
1326 3768 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (33)]
] -46.7 MRshow
LT1
900 1285 Dia
1148 1288 Dia
1397 1352 Dia
1645 1375 Dia
1893 1401 Dia
2142 1401 Dia
2390 1440 Dia
2638 1506 Dia
2887 1606 Dia
3135 1684 Dia
3383 1751 Dia
3632 1802 Dia
3880 1865 Dia
4128 1767 Dia
4377 1583 Dia
4625 1409 Dia
4873 1285 Dia
5122 1295 Dia
5370 1389 Dia
5618 1464 Dia
5867 1567 Dia
6115 1634 Dia
6363 1718 Dia
6612 1775 Dia
6860 1822 Dia
1717 3768 Dia
1.000 UP
1.000 UL
LT2
LTb
1326 3528 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (44)]
] -46.7 MRshow
LT2
900 2635 BoxF
1148 2710 BoxF
1397 2734 BoxF
1645 2764 BoxF
1893 2783 BoxF
2142 2795 BoxF
2390 2806 BoxF
2638 2735 BoxF
2887 2712 BoxF
3135 2697 BoxF
3383 2661 BoxF
3632 2615 BoxF
3880 2655 BoxF
4128 2666 BoxF
4377 2686 BoxF
4625 2694 BoxF
4873 2635 BoxF
5122 2647 BoxF
5370 2694 BoxF
5618 2655 BoxF
5867 2712 BoxF
6115 2665 BoxF
6363 2746 BoxF
6612 2731 BoxF
6860 2692 BoxF
1717 3528 BoxF
1.000 UP
1.000 UL
LT2
LTb
1326 3288 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (55)]
] -46.7 MRshow
LT2
900 1285 CircleF
1148 1317 CircleF
1397 1331 CircleF
1645 1356 CircleF
1893 1356 CircleF
2142 1477 CircleF
2390 1792 CircleF
2638 2229 CircleF
2887 2732 CircleF
3135 3228 CircleF
3383 3592 CircleF
3632 3847 CircleF
3880 3953 CircleF
4128 3622 CircleF
4377 2737 CircleF
4625 1793 CircleF
4873 1285 CircleF
5122 1439 CircleF
5370 1761 CircleF
5618 2243 CircleF
5867 2763 CircleF
6115 3208 CircleF
6363 3661 CircleF
6612 3941 CircleF
6860 4014 CircleF
1717 3288 CircleF
1.000 UP
1.000 UL
LT2
LTb
1326 3048 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (66)]
] -46.7 MRshow
LT2
900 1285 DiaF
1148 1288 DiaF
1397 1354 DiaF
1645 1371 DiaF
1893 1408 DiaF
2142 1410 DiaF
2390 1438 DiaF
2638 1509 DiaF
2887 1608 DiaF
3135 1685 DiaF
3383 1756 DiaF
3632 1807 DiaF
3880 1836 DiaF
4128 1768 DiaF
4377 1582 DiaF
4625 1406 DiaF
4873 1285 DiaF
5122 1296 DiaF
5370 1389 DiaF
5618 1459 DiaF
5867 1568 DiaF
6115 1641 DiaF
6363 1717 DiaF
6612 1776 DiaF
6860 1777 DiaF
1717 3048 DiaF
1.000 UL
LTb
900 600 M
5960 0 V
0 3840 V
-5960 0 V
900 600 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
