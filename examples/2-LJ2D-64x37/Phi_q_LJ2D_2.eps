%!PS-Adobe-2.0
%%Title: Phi_q_LJ2D_2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jul 28 15:41:43 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1020 1560 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1560 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 50)]
] -66.7 MRshow
1.000 UL
LTb
1020 2520 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2520 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MRshow
1.000 UL
LTb
1020 3480 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3480 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 150)]
] -66.7 MRshow
1.000 UL
LTb
1020 4440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (2)]
[(Symbol) 200.0 0.0 true true 0 (p)]
] -66.7 MCshow
1.000 UL
LTb
5400 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5400 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (3)]
[(Symbol) 200.0 0.0 true true 0 (p)]
[(Helvetica) 200.0 0.0 true true 0 (/2)]
] -66.7 MCshow
1.000 UL
LTb
3940 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3940 400 M
[ [(Symbol) 200.0 0.0 true true 0 (p)]
] -66.7 MCshow
1.000 UL
LTb
2480 600 M
0 63 V
0 3777 R
0 -63 V
stroke
2480 400 M
[ [(Symbol) 200.0 0.0 true true 0 (p)]
[(Helvetica) 200.0 0.0 true true 0 (/2)]
] -66.7 MCshow
1.000 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
LTb
200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 200.0 0.0 true true 0 ( \()]
[(Symbol) 200.0 0.0 true true 0 (e/s)]
[(Helvetica) 160.0 100.0 true true 0 (2)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -86.7 MCshow
grestore
LTb
3940 100 M
[ [(Helvetica) 200.0 0.0 true true 0 (q)]
] -66.7 MCshow
LTb
3940 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (Elastic Stiffness Coefficients for 2D LJ system, complex cell)]
] -66.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5957 4277 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (11)]
] -46.7 MRshow
LT0
6077 4277 M
543 0 V
1020 3321 M
183 31 V
182 24 V
183 32 V
182 21 V
183 17 V
182 16 V
183 0 V
182 7 V
183 3 V
182 11 V
183 14 V
182 -12 V
183 2 V
182 6 V
183 1 V
182 -4 V
183 4 V
182 -1 V
183 -6 V
182 -2 V
183 12 V
182 -14 V
183 -11 V
182 -3 V
183 -7 V
182 0 V
183 -16 V
182 -17 V
183 -21 V
182 -32 V
183 -24 V
182 -31 V
1020 3321 BoxF
1203 3352 BoxF
1385 3376 BoxF
1568 3408 BoxF
1750 3429 BoxF
1933 3446 BoxF
2115 3462 BoxF
2298 3462 BoxF
2480 3469 BoxF
2663 3472 BoxF
2845 3483 BoxF
3028 3497 BoxF
3210 3485 BoxF
3393 3487 BoxF
3575 3493 BoxF
3758 3494 BoxF
3940 3490 BoxF
4123 3494 BoxF
4305 3493 BoxF
4488 3487 BoxF
4670 3485 BoxF
4853 3497 BoxF
5035 3483 BoxF
5218 3472 BoxF
5400 3469 BoxF
5583 3462 BoxF
5765 3462 BoxF
5948 3446 BoxF
6130 3429 BoxF
6313 3408 BoxF
6495 3376 BoxF
6678 3352 BoxF
6860 3321 BoxF
6348 4277 BoxF
1.000 UP
1.000 UL
LT1
LTb
5957 4077 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (22)]
] -46.7 MRshow
LT1
6077 4077 M
543 0 V
1020 1371 M
183 36 V
182 34 V
183 37 V
182 27 V
183 33 V
182 22 V
183 29 V
182 17 V
183 17 V
182 26 V
183 12 V
182 8 V
183 7 V
182 7 V
183 3 V
182 12 V
183 -12 V
182 -3 V
183 -7 V
182 -7 V
183 -8 V
182 -12 V
183 -26 V
182 -17 V
183 -17 V
182 -29 V
183 -22 V
182 -33 V
183 -27 V
182 -37 V
183 -34 V
182 -36 V
1020 1371 Circle
1203 1407 Circle
1385 1441 Circle
1568 1478 Circle
1750 1505 Circle
1933 1538 Circle
2115 1560 Circle
2298 1589 Circle
2480 1606 Circle
2663 1623 Circle
2845 1649 Circle
3028 1661 Circle
3210 1669 Circle
3393 1676 Circle
3575 1683 Circle
3758 1686 Circle
3940 1698 Circle
4123 1686 Circle
4305 1683 Circle
4488 1676 Circle
4670 1669 Circle
4853 1661 Circle
5035 1649 Circle
5218 1623 Circle
5400 1606 Circle
5583 1589 Circle
5765 1560 Circle
5948 1538 Circle
6130 1505 Circle
6313 1478 Circle
6495 1441 Circle
6678 1407 Circle
6860 1371 Circle
6348 4077 Circle
1.000 UP
1.000 UL
LT2
LTb
5957 3877 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (33)]
] -46.7 MRshow
LT2
6077 3877 M
543 0 V
1020 3321 M
183 31 V
182 25 V
183 30 V
182 25 V
183 13 V
182 11 V
183 6 V
182 10 V
183 3 V
182 13 V
183 -2 V
182 0 V
183 9 V
182 -7 V
183 15 V
182 12 V
183 -12 V
182 -15 V
183 7 V
182 -9 V
183 0 V
182 2 V
183 -13 V
182 -3 V
183 -10 V
182 -6 V
183 -11 V
182 -13 V
183 -25 V
182 -30 V
183 -25 V
182 -31 V
1020 3321 CircleF
1203 3352 CircleF
1385 3377 CircleF
1568 3407 CircleF
1750 3432 CircleF
1933 3445 CircleF
2115 3456 CircleF
2298 3462 CircleF
2480 3472 CircleF
2663 3475 CircleF
2845 3488 CircleF
3028 3486 CircleF
3210 3486 CircleF
3393 3495 CircleF
3575 3488 CircleF
3758 3503 CircleF
3940 3515 CircleF
4123 3503 CircleF
4305 3488 CircleF
4488 3495 CircleF
4670 3486 CircleF
4853 3486 CircleF
5035 3488 CircleF
5218 3475 CircleF
5400 3472 CircleF
5583 3462 CircleF
5765 3456 CircleF
5948 3445 CircleF
6130 3432 CircleF
6313 3407 CircleF
6495 3377 CircleF
6678 3352 CircleF
6860 3321 CircleF
6348 3877 CircleF
1.000 UP
1.000 UL
LT3
LTb
5957 3677 M
[ [(Symbol) 200.0 0.0 true true 0 (F)]
[(Helvetica) 160.0 -60.0 true true 0 (44)]
] -46.7 MRshow
LT3
6077 3677 M
543 0 V
1020 1371 M
183 35 V
182 35 V
183 34 V
182 30 V
183 34 V
182 23 V
183 23 V
182 21 V
183 25 V
182 13 V
183 11 V
182 20 V
183 6 V
182 8 V
183 2 V
182 3 V
183 -3 V
182 -2 V
183 -8 V
182 -6 V
183 -20 V
182 -11 V
183 -13 V
182 -25 V
183 -21 V
182 -23 V
183 -23 V
182 -34 V
183 -30 V
182 -34 V
183 -35 V
182 -35 V
1020 1371 TriUF
1203 1406 TriUF
1385 1441 TriUF
1568 1475 TriUF
1750 1505 TriUF
1933 1539 TriUF
2115 1562 TriUF
2298 1585 TriUF
2480 1606 TriUF
2663 1631 TriUF
2845 1644 TriUF
3028 1655 TriUF
3210 1675 TriUF
3393 1681 TriUF
3575 1689 TriUF
3758 1691 TriUF
3940 1694 TriUF
4123 1691 TriUF
4305 1689 TriUF
4488 1681 TriUF
4670 1675 TriUF
4853 1655 TriUF
5035 1644 TriUF
5218 1631 TriUF
5400 1606 TriUF
5583 1585 TriUF
5765 1562 TriUF
5948 1539 TriUF
6130 1505 TriUF
6313 1475 TriUF
6495 1441 TriUF
6678 1406 TriUF
6860 1371 TriUF
6348 3677 TriUF
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
